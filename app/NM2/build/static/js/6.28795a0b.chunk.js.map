{"version":3,"sources":["App/pages/Contact.js"],"names":["Contact","React","useState","name","setName","email","setEmail","phone","setPhone","subject","setSubject","message","setMessage","submitted","setSubmitted","failed","setFailed","validate","emailRegexp","test","length","window","setTimeout","handleSubmit","e","a","preventDefault","dataToSubmit","axios","post","then","response","console","log","data","className","onSubmit","onClick","disabled","type","placeholder","value","onChange","target"],"mappings":"uNAGe,SAASA,IAAW,IAAD,EACRC,IAAMC,SAAS,IADP,mBACzBC,EADyB,KACnBC,EADmB,OAENH,IAAMC,SAAS,IAFT,mBAEzBG,EAFyB,KAElBC,EAFkB,OAGNL,IAAMC,SAAS,IAHT,mBAGzBK,EAHyB,KAGlBC,EAHkB,OAIFP,IAAMC,SAAS,IAJb,mBAIzBO,EAJyB,KAIhBC,EAJgB,OAKFT,IAAMC,SAAS,IALb,mBAKzBS,EALyB,KAKhBC,EALgB,OAMEX,IAAMC,UAAS,GANjB,mBAMzBW,EANyB,KAMdC,EANc,OAOJb,IAAMC,SAAS,IAPX,mBAOzBa,EAPyB,KAOjBC,EAPiB,KAS1BC,EAAW,WACf,IAAMC,EAAc,2DAGpB,GAAKA,EAAYC,KAAKd,IAA6B,IAAnBM,EAAQS,OAKjC,GAAKF,EAAYC,KAAKd,GAKtB,GAAIE,EAAMa,OAAS,IAZN,wQAYwBD,KAAKZ,GAC/CS,EAAU,uCACVK,OAAOC,YAAW,WAChBN,EAAU,MACT,SACE,IAAuB,IAAnBL,EAAQS,OAMjB,OAAO,EALPJ,EAAU,yBACVK,OAAOC,YAAW,WAChBN,EAAU,MACT,UAbHA,EAAU,wCACVK,OAAOC,YAAW,WAChBN,EAAU,MACT,UARHA,EAAU,sDACVK,OAAOC,YAAW,WAChBN,EAAU,MACT,MAqBDO,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACnBD,EAAEE,kBACcT,IAFG,uBAKjBH,GAAa,GAEbO,OAAOC,YAAW,WAChBR,GAAa,KACV,KAGDa,EAAe,CACnBxB,OACAE,QACAE,QACAE,UACAE,WAjBiB,SAoBbiB,IACHC,KAAK,mBAAoBF,GACzBG,MAAK,SAAAC,GAAaC,QAAQC,IAAR,0BAA+BF,EAASG,UAC1DJ,MAAK,WACJ1B,EAAQ,IACRE,EAAS,IACTE,EAAS,IACTE,EAAW,IACXE,EAAW,OA5BI,2CAAH,sDAiClB,OACE,0BAAMuB,UAAU,OAAOC,SAAUb,GAC/B,yBAAKY,UAAU,gBACb,wBAAIA,UAAU,4BAAd,cAIA,wBAAIA,UAAU,eAAd,kCACCtB,GACC,uBAAGsB,UAAU,8CAAb,wBAIDpB,EAAOK,OAAS,GACf,uBAAGe,UAAU,2CAEVpB,GAGL,4BACEoB,UAAU,6BACVE,QAASd,EACTe,SAAUzB,GAAaE,EAAOK,OAAS,GAHzC,WAQF,yBAAKe,UAAU,iBACb,yBAAKA,UAAU,iBAEb,2BACEI,KAAK,OACLJ,UAAU,kCACVK,YAAY,YACZC,MAAOtC,EACPuC,SAAU,SAAClB,GAAD,OAAOpB,EAAQoB,EAAEmB,OAAOF,WAGtC,yBAAKN,UAAU,iBAEb,2BACEI,KAAK,QACLJ,UAAU,kCACVK,YAAY,gCACZC,MAAOpC,EACPqC,SAAU,SAAClB,GAAD,OAAOlB,EAASkB,EAAEmB,OAAOF,WAGvC,yBAAKN,UAAU,iBAEb,2BACEI,KAAK,OACLJ,UAAU,kCACVK,YAAY,oBACZC,MAAOlC,EACPmC,SAAU,SAAClB,GAAD,OAAOhB,EAASgB,EAAEmB,OAAOF,WAGvC,yBAAKN,UAAU,iBAEb,2BACEI,KAAK,OACLJ,UAAU,kCACVK,YAAY,UACZC,MAAOhC,EACPiC,SAAU,SAAClB,GAAD,OAAOd,EAAWc,EAAEmB,OAAOF,WAGzC,yBAAKN,UAAU,iBAEb,8BACEI,KAAK,OACLJ,UAAU,iDACVK,YAAY,4CACZC,MAAO9B,EACP+B,SAAU,SAAClB,GAAD,OAAOZ,EAAWY,EAAEmB,OAAOF","file":"static/js/6.28795a0b.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default function Contact() {\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n  const [subject, setSubject] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [submitted, setSubmitted] = React.useState(false);\n  const [failed, setFailed] = React.useState(\"\")\n\n  const validate = () => {\n    const emailRegexp = /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/;\n    const phoneRegexp = /^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/\n\n    if (!emailRegexp.test(email) && message.length === 0) {\n      setFailed(\"Please submit a message and a valid email address.\");\n      window.setTimeout(() => {\n        setFailed(\"\");\n      }, 4000);\n    } else if (!emailRegexp.test(email)) {\n      setFailed(\"Please submit a valid email address.\");\n      window.setTimeout(() => {\n        setFailed(\"\");\n      }, 4000);\n    } else if (phone.length > 0 && !phoneRegexp.test(phone)) {\n      setFailed(\"Please submit a valid phone number.\");\n      window.setTimeout(() => {\n        setFailed(\"\");\n      }, 4000);\n    } else if (message.length === 0) {\n      setFailed(\"Please add a message.\");\n      window.setTimeout(() => {\n        setFailed(\"\");\n      }, 4000);\n    } else {\n      return true;\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = validate()\n\n    if (isValid) {\n      setSubmitted(true);\n\n      window.setTimeout(() => {\n        setSubmitted(false);\n        }, 4000\n      );\n\n    const dataToSubmit = {\n      name,\n      email,\n      phone,\n      subject,\n      message,\n    };\n    \n    await axios\n      .post(\"/api/v1/messages\", dataToSubmit)\n      .then(response => {console.log(`axios response: ${response.data}`)})\n      .then(() => {\n        setName('')\n        setEmail('')\n        setPhone('')\n        setSubject('')\n        setMessage('')\n      })\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <div className=\"form__header\">\n        <h2 className=\"text-size-2 light-yellow\">\n          {/* Any Questions? */}\n          Contact Us\n        </h2>\n        <h3 className=\"text-size-3\">Please leave us a message here</h3>\n        {submitted && (\n          <p className=\"form__success-message--contact text-size-3\">\n            Email has been sent.\n          </p>\n        )}\n        {failed.length > 0 && (\n          <p className=\"form__fail-message--contact text-size-3\">\n            {/* Failed to register for newsletter. Please try again. */}\n            {failed}\n          </p>\n        )}\n        <button\n          className=\"btn btn__form btn__contact\"\n          onClick={handleSubmit}\n          disabled={submitted || failed.length > 0}\n        >\n          Submit\n        </button>\n      </div>\n      <div className=\"form__content\">\n        <div className=\"form__element\">\n          {/* <label>Name</label> */}\n          <input\n            type=\"text\"\n            className=\"form__input form__input-contact\"\n            placeholder=\"Your name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form__element\">\n          {/* <label>Email</label> */}\n          <input\n            type=\"email\"\n            className=\"form__input form__input-contact\"\n            placeholder=\"Your email address (required)\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form__element\">\n          {/* <label>Phone Number</label> */}\n          <input\n            type=\"text\"\n            className=\"form__input form__input-contact\"\n            placeholder=\"Your phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </div>\n        <div className=\"form__element\">\n          {/* <label>Subject</label> */}\n          <input\n            type=\"text\"\n            className=\"form__input form__input-contact\"\n            placeholder=\"Subject\"\n            value={subject}\n            onChange={(e) => setSubject(e.target.value)}\n          />\n        </div>\n        <div className=\"form__element\">\n          {/* <label>Message</label> */}\n          <textarea\n            type=\"text\"\n            className=\"form__textarea form__input form__input-contact\"\n            placeholder=\"Please enter your message here (required)\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n      </div>\n    </form>\n  );\n}\n\n// Form needs:\n// 1. name\n// 2. email\n// 3. phone (optional)\n// 4. subject\n// 5. message"],"sourceRoot":""}